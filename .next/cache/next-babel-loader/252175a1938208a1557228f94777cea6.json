{"ast":null,"code":"import { configureStore, createSlice, ThunkAction } from '@reduxjs/toolkit';\nimport { Action } from 'redux'; // import {createWrapper, HYDRATE} from 'next-redux-wrapper';\n\nexport const store = configureStore({\n  reducer: {}\n}); // export const subjectSlice = createSlice({\n//     name: 'subject',\n//     initialState: {},\n//     reducers: {\n//         setEnt(state, action) {\n//             return action.payload;\n//         },\n//     },\n//     extraReducers: {\n//         [HYDRATE]: (state, action) => {\n//             console.log('HYDRATE', state, action.payload);\n//             return {\n//                 ...state,\n//                 ...action.payload.subject,\n//             };\n//         },\n//     },\n// });\n// const makeStore = () =>\n//     configureStore({\n//         reducer: {\n//             [subjectSlice.name]: subjectSlice.reducer,\n//         },\n//         devTools: true,\n//     });\n// export const fetchSubject = (id) => async dispatch => {\n//     const timeoutPromise = (timeout) => new Promise(resolve => setTimeout(resolve, timeout));\n//     await timeoutPromise(200);\n//     dispatch(\n//         subjectSlice.actions.setEnt({\n//             [id]: {\n//                 id,\n//                 name: `Subject ${id}`,\n//             },\n//         }),\n//     );\n// };\n// export const wrapper = createWrapper(makeStore);\n// export const selectSubject = (id) => (state) => state?.[subjectSlice.name]?.[id];","map":{"version":3,"sources":["/Users/seanmodd/Dev/2022/GitHubYouTube/next-with-redux-toolkit/store.jsx"],"names":["configureStore","createSlice","ThunkAction","Action","store","reducer"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,WAAxB,EAAqCC,WAArC,QAAuD,kBAAvD;AACA,SAAQC,MAAR,QAAqB,OAArB,C,CACA;;AACA,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAChCK,EAAAA,OAAO,EAAE;AADuB,CAAD,CAA5B,C,CAGP;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import {configureStore, createSlice, ThunkAction} from '@reduxjs/toolkit';\nimport {Action} from 'redux';\n// import {createWrapper, HYDRATE} from 'next-redux-wrapper';\nexport const store = configureStore({\n    reducer: {}\n});\n// export const subjectSlice = createSlice({\n//     name: 'subject',\n\n//     initialState: {},\n\n//     reducers: {\n//         setEnt(state, action) {\n//             return action.payload;\n//         },\n//     },\n\n//     extraReducers: {\n//         [HYDRATE]: (state, action) => {\n//             console.log('HYDRATE', state, action.payload);\n//             return {\n//                 ...state,\n//                 ...action.payload.subject,\n//             };\n//         },\n//     },\n// });\n\n// const makeStore = () =>\n//     configureStore({\n//         reducer: {\n//             [subjectSlice.name]: subjectSlice.reducer,\n//         },\n//         devTools: true,\n//     });\n\n// export const fetchSubject = (id) => async dispatch => {\n//     const timeoutPromise = (timeout) => new Promise(resolve => setTimeout(resolve, timeout));\n\n//     await timeoutPromise(200);\n\n//     dispatch(\n//         subjectSlice.actions.setEnt({\n//             [id]: {\n//                 id,\n//                 name: `Subject ${id}`,\n//             },\n//         }),\n//     );\n// };\n\n// export const wrapper = createWrapper(makeStore);\n\n// export const selectSubject = (id) => (state) => state?.[subjectSlice.name]?.[id];\n"]},"metadata":{},"sourceType":"module"}